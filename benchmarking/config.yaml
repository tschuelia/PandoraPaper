# Path to the dataset you want to benchmark and the respective file format data type
# The path should only specify the prefix
# This pipeline expects the files in any of the formats supported by Pandora
# See the Pandora wiki for further information:
# https://pandorageno.readthedocs.io/en/latest/cli_config.html#input-data
dataset_prefix: path/to/your/dataset
dataset_format: EIGENSTRAT

# Optional verbose name for your dataset
# If not set, the name of the dataset_prefix files will be used.
dataset_name: dataset_name

# Path to a file containing a list of new-line separated populations
# This is typically a list of modern populations that are used for the PCA computation,
# when analyzing a dataset with modern and ancient samples
embedding_populations: modern_populations.txt

# Base directory where the pipeline should store all results in
# The pipeline run will create the following files in this outdir:
# - results.parquet: Parquet file containing all benchmark results
# - pandora_no_convergence: Directory containing the results of a Pandora run with disabled bootstrap convergence detection
# - pandora_low_convergence: Directory containing the results of a Pandora run with bootstrap convergence detection using the default 0.05 confidence level
# - pandora_high_convergence: Directory containing the results of a Pandora run with bootstrap convergence detection using a more conservative 0.01 confidence level
# - pandora_low_convergence_fewer_cores: Directory containing the results of a Pandora run with bootstrap convergence detection using the default 0.05 confidence level, but only half the number of threads provided
# - convertf: Directory containing the converted dataset files in EIGENSTRAT format as required by Pandora
outdir_base: results

# What kind of analysis to perform, can be either `PCA` or `MDS`
embedding_algorithm: PCA
# Number of components to use for the embedding.
# For PCA, we recommend (and used) 10, for MDS 2.
n_components: 2

# In case smartpca and convertf are not in your path, you need to provide the full paths to their executables.
# Per default, the pipeline assumes it can run `smartpca` and `convertf` directly.
# You can check if they are in your path by typing `smartpca` and `convertf` in your terminal.
# If either output says something like `command not found`, specify the full path.
smartpca: path/to/smartpca
convertf: path/to/convertf

# In case you want to use specific smartpca settings for your analyses, you can specify it like this:
smartpca_optional_settings:
  numoutlieriter: 0
  shrinkmode: true

# Number of threads to use for the benchmark
# Note that one of the benchmarks will use only half of the provided number of threads
threads: 20
